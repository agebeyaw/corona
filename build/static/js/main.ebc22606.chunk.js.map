{"version":3,"sources":["serviceWorker.js","contexts/ThemeContext.js","contexts/DataContext.js","helpers/misc.js","hooks/window-dimensions.js","components/Figures/Figures.jsx","components/Map/Map.jsx","components/Sections/remind.js","components/Sections/symptoms.js","components/Sections/Sections.js","components/Layout/Header.jsx","components/Layout/Footer.jsx","components/Chart/chart-defaults.js","constants.js","utils/commonfunctions.js","components/Chart/allstates.js","components/Chart/dailyconfirmedchart.js","components/Chart/growthtrendchart.js","components/Chart/totalconfirmedchart.js","components/Chart/agechart.js","components/Chart/genderchart.js","components/Chart/nationalitychart.js","components/Chart/Chart.js","components/StyledCard/StyledCard.jsx","components/Marker/Marker.jsx","components/DataElement/Loader.jsx","components/DataElement/CitiesSplit.jsx","components/DataElement/Recent.jsx","components/DataElement/DataElement.jsx","components/Layout/Mobile.jsx","components/Layout/Desktop.jsx","components/Layout/Layout.jsx","components/Contributors/Contributors.jsx","containers/App/App.jsx","index.js"],"names":["Boolean","window","location","hostname","match","ThemeContext","createContext","ThemeProvider","props","useState","localStorage","getItem","useDarkTheme","setUseDarkTheme","useEffect","matchMedia","matches","setItem","Provider","value","useTheme","useContext","DataContext","DataProvider","isLoading","setIsLoading","data","setData","clickedCity","setClickedCity","fetch","process","then","res","json","result","apiResult","success","len","length","i","cases","regional","j","confirmedCases","parsedCases","push","parseCases","total","finalDatabase","cities","cures","deaths","processData","error","console","log","useData","targetDay","day","targetCases","caseConfirmed","loc","count","parseInt","death","discharged","cure","sum","reduce","getWindowDimensions","width","innerWidth","height","innerHeight","useWindowDimensions","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener","CountLoader","useStyletron","theme","speed","display","viewBox","backgroundColor","colors","backgroundTertiary","foregroundColor","backgroundSecondary","x","y","rx","ry","Figure","delta","label","color","size","todayGrowth","toLocaleString","content","overrides","Body","style","Inner","$theme","borderRadius","borders","radius200","boxShadow","lighting","shadow500","placement","PLACEMENT","top","returnFocus","autoFocus","showArrow","fontWeight","fontSize","lineHeight","marginTop","Figures","allTime","confirmed","recovered","active","deltaConfirmed","deltaRecovered","deltaDeaths","StyledCard","title","mediaQuery","medium","maxHeight","overflow","large","tested","breakpoints","negative","positive","primary","lastUpdatedTime","Centered","styled","backgroundPrimary","justifyContent","alignItems","flexDirection","createMarkerIcon","casesCount","deathsCount","divIcon","iconSize","html","renderToStaticMarkup","getMarkerSize","max","Map","activeCity","setActiveCity","groupedCases","groupBy","groupedDeaths","city","name","Math","map","position","filter","item","pop","getLocationForCity","center","zoom","zoomControl","maxZoom","minZoom","maxBounds","TileLayer","url","attribution","showCoverageOnHover","iconCreateFunction","cluster","getAllChildMarkers","marker","options","Marker","key","icon","onClick","Popup","onClose","Remind","className","Row","Col","md","Card","Img","src","Title","Text","Symptoms","Sections","Header","Navbar","collapseOnSelect","expand","bg","variant","fixed","Brand","href","Toggle","aria-controls","Collapse","id","Nav","Link","NavDropdown","Item","Divider","eventKey","Footer","Container","target","Date","getFullYear","defaults","global","deepmerge","defaultFontFamily","elements","line","fill","point","pointStyle","tooltips","intersect","mode","displayColors","borderWidth","titleSpacing","titleMarginBottom","bodySpacing","cornerRadius","xPadding","yPadding","caretSize","legend","labels","padding","usePointStyle","hover","layout","left","right","bottom","formatNumber","number","Intl","NumberFormat","format","defaultOptions","responsive","events","maintainAspectRatio","titleFontColor","bodyFontColor","callbacks","tooltipItem","datasets","datasetIndex","round","yLabel","radius","tension","yAxisDefaults","type","ticks","beginAtZero","undefined","precision","callback","gridLines","drawBorder","tickMarkLength","xAxisDefaults","STATE_CODES","AA","AF","AM","BG","GA","OR","SO","DD","HR","SN","TG","stateCodes","reverseStateCodes","Object","keys","index","code","getStateName","toUpperCase","AllStatesChart","dates","chartReference","React","createRef","statesData","forEach","status","date","parse","has","set","previousValue","get","currentValue","sortedMap","entries","sort","a","b","borderCapStyle","pointBackgroundColor","borderColor","pointHoverRadius","dataset","boxWidth","scales","yAxes","scaleLabel","labelString","xAxes","time","unit","tooltipFormat","stepSize","displayFormats","millisecond","second","minute","hour","week","month","quarter","year","ref","ci","current","chartInstance","meta","getDatasetMeta","hidden","update","DailyConfirmedChart","deceased","timeseries","dailyconfirmed","dailyrecovered","dailydeceased","barDataSet","reverse","generateLabels","chart","stacked","GrowthTrendChart","caretPadding","statesDailyData","stateData","weekSum","idx","order","cubicInterpolationMode","min","values","Number","toString","TotalConfirmedChart","totalconfirmed","totalrecovered","totaldeceased","AgeChart","ages","Array","patient","agebracket","age","chartData","chartOptions","sampleSize","GenderChart","male","female","gender","_meta","percentage","parseFloat","toFixed","NationalityChart","nationality","hasOwnProperty","toLowerCase","country","Chart","fetched","setFetched","setTimeseries","rawData","setRawData","statesTimeSeries","setStatesTimeSeries","getStates","Promise","all","axios","response","rawDataResponse","stateDailyResponse","cases_time_series","states_daily","raw_data","animationDelay","children","Root","styleOverrides","boxSizing","offset","xmlns","x1","y1","x2","y2","stopColor","cx","cy","r","textAnchor","dy","Loader","CitiesSplit","$style","margin","dataKey","tick","contentPrimary","cursor","hide","formatter","contentStyle","accent","SearchIcon","css","paddingLeft","sizing","scale500","compare","originalText","filterValue","includes","trim","Recent","setFilter","filteredData","marginBottom","SIZE","compact","s","Before","placeholder","onChange","event","minHeight","infinite","Bar","marginLeft","marginRight","role","slice","source","prepareData","DataElement","setGroupedCases","setGroupedDeaths","groupedCures","setGroupedCures","activeKey","setActiveKey","TabContent","textAlign","CustomTab","Tab","flexGrow","Mobile","isOpen","setIsOpen","scale600","paddingBottom","flexGridColumnCount","TabBar","$active","mini","BaseButton","closeable","animate","ROLE","dialog","Dialog","Contributors","Layout","fluid","$as","kind","KIND","secondary","data-href","data-layout","data-size","rel","flexGridColumnGap","flexGridRowGap","engine","Styletron","rest","DarkTheme","typography","lightTheme","createTheme","lightThemePrimitives","primaryFontFamily","darkTheme","darkThemePrimitives","App","Consumer","AppContainer","LayersContainer","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.ebc22606.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}","import React, { createContext, useContext, useState, useEffect } from 'react';\n\nexport const ThemeContext = createContext();\n\nexport function ThemeProvider(props) {\n  const [useDarkTheme, setUseDarkTheme] = useState(localStorage.getItem('useDarkTheme') === 'true' || false);\n\n  useEffect(() => {\n    if (localStorage.getItem('useDarkTheme') === null && window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {\n      setUseDarkTheme(true);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('useDarkTheme', useDarkTheme);\n    // firebase.analytics().setUserProperties({ appTheme: useDarkTheme ? 'dark' : 'light' });\n  }, [useDarkTheme]);\n\n  return (\n    <ThemeContext.Provider\n      value={{\n        useDarkTheme,\n        setUseDarkTheme\n      }}\n      {...props}\n    />\n  )\n}\n\nexport function useTheme() {\n  return useContext(ThemeContext);\n}","import React, {\n  createContext,\n  useContext,\n  useState,\n  useEffect\n } from 'react';\n\n import * as cities from './cities.json';\n const DataContext = createContext();\n\n export function DataProvider(props) {\n  const [isLoading, setIsLoading] = useState(true);\n  const [data, setData] = useState(null);\n  const [clickedCity, setClickedCity] = useState(null)\n\n\n  useEffect(() => {\n   fetch(process.env.REACT_APP_API_URL +\"/api/data_for_map.json\")\n    .then(res => res.json())\n    .then(\n     (result) => {\n      setData(processData(result));\n      setIsLoading(false)\n     },\n     (error) => {\n      console.log('error in retriving data.')\n     });\n  }, []);\n\n  return ( <\n   DataContext.Provider value = {\n    {\n     isLoading,\n     ...data,\n     clickedCity,\n     setClickedCity\n    }\n   } {\n    ...props\n   }\n   />\n  )\n }\n\n export function useData() {\n  return useContext(DataContext);\n }\n\n\n function processData(apiResult) {\n  if (apiResult.success === 'false') return {};\n  let data = apiResult.data;\n  const len = data.length;\n\n   // adding count field\n  for (let i in data) {\n   let cases = data[i].regional;\n   for (let j in cases) {\n    cases[j]['count'] = cases[j].confirmedCases;\n   }\n  }\n\n  let parsedCases = [];\n  for (let i = 0; i < len; i++) {\n   parsedCases.push(parseCases(data, i, apiResult.total))\n  }\n\n  let finalDatabase = parsedCases[0];\n  finalDatabase['cities'] = cities['cities'];\n  finalDatabase['allTime'] = apiResult.total;\n\n  for (let i = 1; i < len; i++) {\n   for (let j in parsedCases[i].cases) finalDatabase['cases'].push(parsedCases[i]['cases'][j]);\n   for (let j in parsedCases[i].cures) finalDatabase['cures'].push(parsedCases[i]['cures'][j]);\n   for (let j in parsedCases[i].deaths) finalDatabase['deaths'].push(parsedCases[i]['deaths'][j]);\n  }\n\n  return finalDatabase;\n }\n\n // Parse Cases according to old database\n function parseCases(data, targetDay) {\n  let day = data[targetDay].day;\n  let targetCases = data[targetDay].regional;\n  let cases = [],\n   deaths = [],\n   cures = [];\n\n  for (let i in targetCases) {\n   let caseConfirmed = {\n    \"city\": targetCases[i].loc,\n    \"count\": targetCases[i].count,\n    \"date\": day\n   }\n\n   cases.push(caseConfirmed);\n   if (parseInt(targetCases[i].deaths) !== 0) {\n    let death = {\n     \"city\": targetCases[i].loc,\n     \"count\": targetCases[i].deaths,\n     \"date\": day\n    }\n    deaths.push(death);\n   }\n   if (parseInt(targetCases[i].discharged) !== 0) {\n    let cure = {\n     \"city\": targetCases[i].loc,\n     \"count\": targetCases[i].discharged,\n     \"date\": day\n    }\n    cures.push(cure);\n   }\n  }\n\n  let res = {\n   \"cases\": cases,\n   \"deaths\": deaths,\n   \"cures\": cures,\n  }\n  return res;\n }\n\n // Calculate difference between value of two consecutive days\n function solveDifference(regionalNew, regionalOld) {\n  let tempDiff = [];\n\n  for (let i in regionalNew) {\n   let newState = true;\n   for (let j in regionalOld) {\n      if (regionalNew[i].loc === regionalOld[j].loc) {\n      newState = false;\n      let tempObj = {};\n      tempObj.loc = regionalNew[i].loc\n      tempObj.deaths = regionalNew[i].deaths - regionalOld[j].deaths;\n      tempObj.discharged = regionalNew[i].discharged - regionalOld[j].discharged;\n      tempObj.count = regionalNew[i].count - regionalOld[j].count;\n\n      if (tempObj.deaths > 0 || tempObj.discharged > 0 || tempObj.count > 0) {\n        tempDiff.push(tempObj);\n        }\n      }\n      if (!newState) break;\n   }\n   if (newState) {\n      tempDiff.push(regionalNew[i]);\n    }\n  }\n  return tempDiff;\n }\n\n//  function processBarData(rawData){\n//     //let rawData = cloneDeep(result);\n//     rawData = rawData.data;\n//     let ct = cities['cities'];\n//     let db = [];\n//     ct.forEach(function (element){\n//       let obj = {};\n//       obj[element.name] = [];\n//       db.push(obj);\n//     })\n//     let i = 1;\n//     rawData.forEach(function(date){\n//       date.regional.forEach(function (location){\n//         db.forEach(function(state){\n//           let st = Object.keys(state)[0]\n//           if(st === location.loc){\n//             state[st].push(location.confirmedCasesIndian + location.confirmedCasesForeign);\n//           }\n//         })\n//       })\n//       db.forEach(function(state){\n//         let st = Object.keys(state)[0]\n//         if(state[st].length < i) state[st].push(0);\n//       })\n//       i+=1;\n//     })\n//     // console.log(db)\n//     return db;\n//  }\n","export function sum(data) {\n  if (!data) {\n    return 0;\n  }\n  \n  return data.reduce((total, { count }) => count + total, 0);\n}","import { useState, useEffect } from 'react';\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n  \n  return {\n    width,\n    height\n  };\n}\n\nexport default function useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return windowDimensions;\n}","import React from 'react';\nimport { Display2, Display4, Paragraph2, Paragraph3 } from 'baseui/typography';\nimport { StyledBody } from 'baseui/card';\nimport ArrowUp from 'baseui/icon/arrow-up';\nimport { StatefulTooltip, PLACEMENT } from 'baseui/tooltip';\nimport { Block } from 'baseui/block';\nimport { useStyletron } from 'baseui';\n\nimport { StyledCard } from '..';\nimport ContentLoader from 'react-content-loader';\n\nimport { useData } from '../../contexts/DataContext';\nimport moment from 'moment';\nimport { sum } from '../../helpers/misc';\nimport useWindowDimensions from '../../hooks/window-dimensions';\n\nfunction CountLoader() {\n  const [, theme] = useStyletron();\n\n  return (\n    <ContentLoader\n      speed={0.6}\n      width={50}\n      height={64}\n      display={'block'}\n      viewBox=\"0 0 50 64\"\n      backgroundColor={theme.colors.backgroundTertiary}\n      foregroundColor={theme.colors.backgroundSecondary}\n    >\n      <rect x=\"0\" y=\"5\" rx=\"2\" ry=\"2\" width=\"40\" height=\"54\" />\n    </ContentLoader>\n  );\n}\n\nexport function Figure({ count, delta, isLoading, label, color, size = 'standard' }) {\n  const total = count || 0\n  const todayGrowth = delta || 0;\n\n  return (\n    <div>\n      {isLoading &&\n        <CountLoader />\n      }\n      {!isLoading &&\n        <Block display=\"flex\">\n          {size === 'standard'\n            ? <Display2 color={color}>{total.toLocaleString()}</Display2>\n            : <Display4 color={color}>{total.toLocaleString()}</Display4>\n          }\n          {todayGrowth > 0 &&\n            <StatefulTooltip\n              content={() => (\n                <Paragraph3 color=\"backgroundPrimary\">Today's Change</Paragraph3>\n              )}\n              overrides={{\n                Body: {\n                  style: {\n                    backgroundColor: 'transparent'\n                  }\n                },\n                Inner: {\n                  style: ({ $theme }) => ({\n                    borderRadius: $theme.borders.radius200,\n                    boxShadow: $theme.lighting.shadow500\n                  })\n                }\n              }}\n              placement={PLACEMENT.top}\n              returnFocus\n              autoFocus\n              showArrow\n            >\n              <span style={{\n                display: 'flex',\n                fontWeight: 400,\n                fontSize: size === 'standard' ? '24px' : '16px',\n                color: '#7b7b7b',\n                lineHeight: size === 'standard' ? '32px' : '24px'\n              }}><ArrowUp size={size === 'standard' ? 32 : 24} />{todayGrowth}</span>\n            </StatefulTooltip>\n          }\n        </Block>\n      }\n      {size === 'standard'\n        ? <Paragraph2 marginTop={0}>{label}</Paragraph2>\n        : <Paragraph3 marginTop={0}>{label}</Paragraph3>\n      }\n    </div>\n  );\n}\n\n\nexport default function Figures() {\n  const { cases, deaths, allTime, cures, isLoading } = useData();\n\n  const  total = allTime || {\n    confirmed: 0,\n    recovered: 0,\n    deaths: 0,\n    active: 0,\n    deltaConfirmed: 0,\n    deltaRecovered: 0,\n    deltaDeaths: 0,\n  };\n\n  // const [showMore, setShowMore] = useState(false);\n  const [, theme] = useStyletron();\n  const { width } = useWindowDimensions()\n\n    return (\n    <StyledCard\n      title=\"Coronovirus in Ethiopia\"\n      style={$theme => ({\n        [$theme.mediaQuery.medium]: {\n          maxHeight: 'calc(100vh - 80px)',\n          overflow: 'auto'\n        },\n        [$theme.mediaQuery.large]: {\n          width: '380px'\n        }\n      })}\n    >\n      <StyledBody>\n        <Figure\n            count={total.tested}\n            delta=\"0\"\n            isLoading={isLoading}\n            label=\"Tested\"\n            color=\"#2ABAFF\"\n            size={width < theme.breakpoints.medium ? 'compact' : 'standard'}\n        />\n        <Figure\n          count={total.confirmed}\n          delta={total.deltaConfirmed}\n          isLoading={isLoading}\n          label=\"Confirmed\"\n          color={theme.colors.negative}\n          size={width < theme.breakpoints.medium ? 'compact' : 'standard'}\n        />\n          <Figure\n              count={total.active}\n              delta=\"0\"\n              isLoading={isLoading}\n              label=\"Active\"\n              color=\"orange\"\n              size={width < theme.breakpoints.medium ? 'compact' : 'standard'}\n          />\n        <Figure\n          count={total.recovered}\n          delta={total.deltaRecovered}\n          isLoading={isLoading}\n          label=\"Recovered\"\n          color={theme.colors.positive}\n          size={width < theme.breakpoints.medium ? 'compact' : 'standard'}\n        />\n      <Figure\n          count={total.deaths}\n          delta={total.deltaDeaths}\n          isLoading={isLoading}\n          label=\"Deaths\"\n          color={theme.colors.primary}\n          size={width < theme.breakpoints.medium ? 'compact' : 'standard'}\n      />\n      </StyledBody>\n      <Paragraph3>\n        <small>Last updated on <em>{total.lastUpdatedTime}</em></small>\n      </Paragraph3>\n    </StyledCard>\n  );\n}\n\n","import React, {useState} from 'react';\nimport {renderToStaticMarkup} from 'react-dom/server';\nimport {Map as LeafletMap, Marker, Popup, TileLayer} from 'react-leaflet';\nimport {divIcon} from 'leaflet';\nimport {styled, useStyletron} from 'baseui';\nimport MarkerClusterGroup from 'react-leaflet-markercluster';\nimport {Spinner} from 'baseui/spinner';\nimport {Paragraph2, Label1} from 'baseui/typography';\nimport {StyledBody} from 'baseui/card';\nimport {Block} from 'baseui/block';\nimport {StyledCard} from './..';\nimport {Marker as MarkerIcon} from './..';\nimport {Figure} from '../Figures/Figures';\n\nimport {useData} from '../../contexts/DataContext';\nimport groupBy from 'lodash.groupby';\nimport useWindowDimensions from '../../hooks/window-dimensions';\nimport {sum} from '../../helpers/misc';\n\nconst MIN_MARKER_SIZE = 32;\nconst MAX_MARKER_SIZE = 64;\n\nconst Centered = styled('div', ({$theme}) => ({\n    backgroundColor: $theme.colors.backgroundPrimary,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'column',\n    height: 'auto',\n    width: '100vw',\n    [$theme.mediaQuery.medium]: {\n        height: '100vh'\n    }\n}));\n\nfunction createMarkerIcon(size, casesCount, deathsCount) {\n    return divIcon({\n        iconSize: [size, size],\n        html: renderToStaticMarkup(\n            <MarkerIcon size={size} casesCount={casesCount} deathsCount={deathsCount}/>\n        )\n    });\n}\n\nfunction getMarkerSize(max, count) {\n    return (count / max * (MAX_MARKER_SIZE - MIN_MARKER_SIZE)) + MIN_MARKER_SIZE;\n}\n\nfunction getLocationForCity(clickedCity, data) {\n    return data.filter((item) => item.city.name === clickedCity).pop().city.location;\n}\n\n\nexport default function Map(props) {\n    const [activeCity, setActiveCity] = useState(null);\n    const {width} = useWindowDimensions();\n    const [, theme] = useStyletron();\n\n    const {cities, cases, deaths, isLoading, clickedCity} = useData();\n\n    if (isLoading) {\n        return (\n            <Centered>\n                <Spinner/>\n                <Paragraph2>Loading Data</Paragraph2>\n            </Centered>\n        )\n    }\n\n    const groupedCases = groupBy(cases, 'city');\n    const groupedDeaths = groupBy(deaths, 'city');\n\n    let data = [];\n\n    if (!data.length) {\n        for (const city of cities) {\n            if (groupedCases[city.name]) {\n                data.push({\n                    city,\n                    cases: {\n                        total: sum(groupedCases[city.name]),\n                        data: groupedCases[city.name] || []\n                    },\n                    deaths: {\n                        total: sum(groupedDeaths[city.name]),\n                        data: groupedDeaths[city.name] || []\n                    }\n                })\n            }\n        }\n    }\n\n    const max = Math.max(...(data.map(({cases}) => cases.total)));\n    const position = clickedCity ? getLocationForCity(clickedCity, data) : [9.005401, 38.763611];\n\n    return (\n        <LeafletMap\n            center={position}\n            zoom={clickedCity ? 10 : width < theme.breakpoints.medium ? 4 : 5}\n            zoomControl={false}\n            maxZoom={11}\n            minZoom={width < theme.breakpoints.medium ? 6 : 7}\n            maxBounds={[\n                [3, 25],  // Southwest coordinates\n                [15, 55]] // Northeast coordinates\n            }\n            {...props}\n        ><TileLayer\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            attribution=\"&copy; <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors\"\n        />\n            <MarkerClusterGroup\n                showCoverageOnHover={false}\n                iconCreateFunction={(cluster) => {\n                    const count = cluster\n                        .getAllChildMarkers()\n                        .reduce((total, marker) => ({\n                            cases: marker.options.casesCount + total.cases,\n                            deaths: marker.options.deathsCount + total.deaths\n                        }), {\n                            cases: 0,\n                            deaths: 0\n                        });\n\n                    return createMarkerIcon(getMarkerSize(max, count.cases), count.cases, count.deaths);\n                }}\n            >\n                {data && data.map(({city, cases, deaths}) => (\n                    <Marker\n                        key={city.name}\n                        position={city.location}\n                        icon={createMarkerIcon(getMarkerSize(max, cases.total), cases.total, deaths.total)}\n                        onClick={() => {\n                            setActiveCity({...city, cases, deaths});\n                        }}\n                        casesCount={cases.total}\n                        deathsCount={deaths.total}\n                    />\n                ))}\n            </MarkerClusterGroup>\n            {activeCity && <Popup\n                position={activeCity.location}\n                onClose={() => setActiveCity(null)}\n            >\n                <StyledCard\n                    style={$theme => ({\n                        [$theme.mediaQuery.large]: {\n                            width: '320px'\n                        }\n                    })}\n                >\n                    <StyledBody>\n                        <Label1>{activeCity.name}</Label1>\n\n                        <Block marginTop=\"10px\">\n                            {<Figure\n                                data={activeCity.deaths.total}\n                                label=\"Deaths\"\n                                color={theme.colors.primary}\n                                size=\"compact\"\n                            />}\n\n                            <Figure\n                                count={activeCity.cases.total}\n                                delta=\"0\"\n                                label=\"Confirmed cases\"\n                                color={theme.colors.negative}\n                                size=\"compact\"\n                            />\n                        </Block>\n                    </StyledBody>\n                </StyledCard>\n            </Popup>}\n        </LeafletMap>\n    );\n}\n","import React, {useState} from 'react';\n\nimport {Card, Row, Col} from \"react-bootstrap\";\n\nexport default function Remind() {\n    return (\n        <div>\n            <h1 className={'text-center mb-5'}>ያስታውሱ ...</h1>\n            <Row className=\"cards\">\n                <Col md={2}>\n                    <Card>\n                        <Card.Img src=\"images/reminder/distance.png\"/>\n                        <Card.Body>\n                            <Card.Title className={'font-weight-bold'}>እርቀትዎን ይጠብቁ !</Card.Title>\n                            <Card.Text>\n                                በሚንቀሳቀሱበት ወይም በሚቀመጡበት ወቅት፣ ከሌሎች ሰዎች ቢያንስ የ 2 ሜትር እርቀት ይጠብቁ።\n                            </Card.Text>\n                        </Card.Body>\n                    </Card>\n                </Col>\n                <Col md={2}>\n                    <Card>\n                        <Card.Img height=\"250px\" src=\"images/reminder/mask.png\"/>\n                        <Card.Body>\n                            <Card.Title className={'font-weight-bold'}>የአፍ ጭምብል ይጠቀሙ !</Card.Title>\n                            <Card.Text>\n                                ከቤትዎ ውጭ በሚንቀሳቀሱ ጊዜ፣ አፍዎን እና አፍንጫዎን በጭምብል ወይም በጋቢ ይሸፍኑ።\n                            </Card.Text>\n                        </Card.Body>\n                    </Card>\n                </Col>\n                <Col md={2}>\n                    <Card>\n                        <Card.Img height=\"250px\" src=\"images/reminder/stay_home.png\"/>\n                        <Card.Body>\n                            <Card.Title className={'font-weight-bold'}>እቤትዎ ይቆዩ !</Card.Title>\n                            <Card.Text>\n                                የቫይረሱ ስርጭት እስኪቀንስ ወይም እስኪቆም ድረስ፣ በተቻለዎ አቅም ሁሉ እቤትዎ ለመቀመጥ ይሞክሩ።\n                            </Card.Text>\n                        </Card.Body>\n                    </Card>\n                </Col>\n                <Col md={2}>\n                    <Card>\n                        <Card.Img height=\"250px\" src=\"images/reminder/wash.jpg\"/>\n                        <Card.Body>\n                            <Card.Title className={'font-weight-bold'}>እጅዎትን ይታጠቡ !</Card.Title>\n                            <Card.Text>\n                                አፍዎን፣ አፍንጫዎን እና ዐይኖችዎን ከመንካትዎ በፊት፣ እጅዎን ከ 20 - 40 ሰከንዶች በሳሙና እና በውሃ ይታጠቡ።\n                            </Card.Text>\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n        </div>\n    );\n};\n","import React, {useState} from 'react';\n\nimport {Card, Col, Row} from \"react-bootstrap\";\n\nexport default function Symptoms() {\n    return (\n        <div>\n            <h1 className={'text-center mb-5'}>የኮሮና ምልክቶች</h1>\n            <Row className=\"cards\">\n                <Col md={2}>\n                    <Card>\n                        <Card.Img src=\"images/symptoms/cauthing.png\"/>\n                        <Card.Body>\n                            <Card.Title className={'font-weight-bold'}>ደረቅ ሳል</Card.Title>\n                        </Card.Body>\n                    </Card>\n                </Col>\n                <Col md={2}>\n                    <Card>\n                        <Card.Img src=\"images/symptoms/headache.png\"/>\n                        <Card.Body>\n                            <Card.Title className={'font-weight-bold'}>ትኩሳት</Card.Title>\n                        </Card.Body>\n                    </Card>\n                </Col>\n                <Col md={2}>\n                    <Card>\n                        <Card.Img src=\"images/symptoms/throat.png\"/>\n                        <Card.Body>\n                            <Card.Title className={'font-weight-bold'}>የጉሮሮ ቁስለት</Card.Title>\n                        </Card.Body>\n                    </Card>\n                </Col>\n                <Col md={2}>\n                    <Card>\n                        <Card.Img src=\"images/symptoms/shortness-of-breath.jpg\"/>\n                        <Card.Body>\n                            <Card.Title className={'font-weight-bold'}>የእስትንፋስ እጥረት</Card.Title>\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n        </div>\n    );\n}\n","import Remind from './remind';\nimport Symptoms from './symptoms';\n\nimport React, {useState, useEffect} from 'react';\n\nfunction Sections() {\n    return (\n        <div className=\"cards-container\">\n            <Symptoms/>\n            <Remind/>\n        </div>\n    );\n}\n\nexport default Sections;\n","import React, {useState} from 'react';\n\nimport {Navbar, Nav, NavDropdown} from \"react-bootstrap\";\n\nexport default function Header() {\n    return (\n        <div className='mb-5'>\n            <Navbar className='pb-md-3 pd-sm-1' collapseOnSelect expand=\"lg\" bg=\"light\" variant=\"light\" fixed=\"top\">\n                <Navbar.Brand href=\"#home\">\n                    <a href=\"/\" style={{'text-decoration': 'none'}}>\n                        <img src=\"/images/logo.png\" width=\"40\" height=\"40\"/>\n                        የኮሮና ቫይረስ ክትትል\n                    </a>\n                </Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\"/>\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\n                    <Nav className=\"mt-2 mr-auto\">\n                        <Nav.Link href=\"#features\">Menu1</Nav.Link>\n                        <Nav.Link href=\"#pricing\">Menu2</Nav.Link>\n                        <NavDropdown title=\"Dropdown\" id=\"collasible-nav-dropdown\">\n                            <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n                            <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\n                            <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n                            <NavDropdown.Divider/>\n                            <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\n                        </NavDropdown>\n                    </Nav>\n                    <Nav>\n                        <Nav.Link href=\"#deets\">ያግኙን</Nav.Link>\n                        <Nav.Link eventKey={2} href=\"#memes\">\n                            መነሻ\n                        </Nav.Link>\n                    </Nav>\n                </Navbar.Collapse>\n            </Navbar>\n        </div>\n    );\n};\n\n","import React, {Component} from \"react\";\nimport {Card, Container, Row, Col} from \"react-bootstrap\";\n\nexport default function Footer() {\n    return (\n        <div className='border-top' style={{'background': '#dee2e6'}}>\n            <footer className=\"mt-5  pb-5 footer\">\n                <Container>\n                    <Row>\n                        <Col>\n                            <h3 className={'mb-3'}>የአስቸኳይ ጊዜ ቁጥሮች</h3>\n                            <Row>\n                                <Col>\n                                    <ul className=\"list-group ml-2\">\n                                        <li className=\"d-flex justify-content-between align-items-center\">\n                                            Addis Abeba\n                                            <span className=\"badge badge-primary badge-pill\">8335/952</span>\n                                        </li>\n                                        <li className=\"d-flex justify-content-between align-items-center\">\n                                            Dire Dawa\n                                            <span className=\"badge badge-primary badge-pill\">6407</span>\n                                        </li>\n                                        <li className=\"d-flex justify-content-between align-items-center\">\n                                            Tigray\n                                            <span className=\"badge badge-primary badge-pill\">6244</span>\n                                        </li>\n                                        <li className=\"d-flex justify-content-between align-items-center\">\n                                            Oromia\n                                            <span className=\"badge badge-primary badge-pill\">6955</span>\n                                        </li>\n                                    </ul>\n                                </Col>\n                                <Col>\n                                    <ul className=\"list-group\">\n                                        <li className=\"d-flex justify-content-between align-items-center\">\n                                            Amhara\n                                            <span className=\"badge badge-primary badge-pill\">6981</span>\n                                        </li>\n                                        <li className=\"d-flex justify-content-between align-items-center\">\n                                            Somali\n                                            <span className=\"badge badge-primary badge-pill\">6599</span>\n                                        </li>\n                                        <li className=\"d-flex justify-content-between align-items-center\">\n                                            Afar\n                                            <span className=\"badge badge-primary badge-pill\">6220</span>\n                                        </li>\n                                        <li className=\"d-flex justify-content-between align-items-center\">\n                                            Debub\n                                            <span className=\"badge badge-primary badge-pill\">6929</span>\n                                        </li>\n                                    </ul>\n                                </Col>\n                            </Row>\n                        </Col>\n                        <Col className={'mt-auto mr-auto'}>\n                            <div className=\"container\">\n                                <div className=\"row\">\n                                    <div className=\"text-center col-md-12\">\n                                        <a href=\"https://www.ambapu.org\" target={'_blank'}\n                                           className={'text-decoration-none'}>\n                                            <Card.Img className={'img-fluid mb-3'} style={{'max-width': '103px'}}\n                                                      src=\"images/logo.png\"/>\n                                            <div>\n                                                &copy; {new Date().getFullYear()}{\" \"}\n                                                Amhara Professionals Association\n                                            </div>\n                                        </a>\n                                    </div>\n                                </div>\n                            </div>\n                        </Col>\n                    </Row>\n                </Container>\n            </footer>\n        </div>\n    );\n};\n\n","import deepmerge from 'deepmerge';\nimport {defaults} from 'react-chartjs-2';\n\ndefaults.global = deepmerge(defaults.global, {\n  defaultFontFamily: 'Archia',\n  elements: {\n    line: {\n      fill: false,\n    },\n    point: {\n      pointStyle: 'rectRounded',\n    },\n  },\n  tooltips: {\n    intersect: false,\n    mode: 'nearest',\n    position: 'average',\n    displayColors: false,\n    borderWidth: 0,\n    titleSpacing: 4,\n    titleMarginBottom: 8,\n    bodySpacing: 5,\n    cornerRadius: 3,\n    xPadding: 6,\n    yPadding: 6,\n    caretSize: 0,\n  },\n  legend: {\n    display: true,\n    position: 'bottom',\n    labels: {\n      padding: 15,\n      usePointStyle: true,\n    },\n  },\n  hover: {\n    intersect: false,\n  },\n  layout: {\n    padding: {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 20,\n    },\n  },\n});\n\nconst formatNumber = (number) =>\n  'Intl' in window ? new Intl.NumberFormat('en-IN').format(number) : number;\n\nconst defaultOptions = {\n  responsive: true,\n  events: [\n    'click',\n    'mousemove',\n    'mouseout',\n    'touchstart',\n    'touchmove',\n    'touchend',\n  ],\n  maintainAspectRatio: false,\n  tooltips: {\n    backgroundColor: 'rgba(20,20,20,0.9)',\n    titleFontColor: 'rgba(255,255,255, 0.9)',\n    bodyFontColor: 'rgba(255,255,255, 0.9)',\n    caretSize: 0,\n    borderWidth: 0,\n    mode: 'index',\n    callbacks: {\n      label: function (tooltipItem, data) {\n        let label = data.datasets[tooltipItem.datasetIndex].label || '';\n        if (label) {\n          label += ': ';\n        }\n        label += formatNumber(Math.round(tooltipItem.yLabel * 100) / 100);\n        return label;\n      },\n    },\n  },\n  elements: {\n    point: {\n      radius: 0,\n    },\n    line: {\n      tension: 0.1,\n    },\n  },\n};\n\nconst yAxisDefaults = {\n  type: 'linear',\n  ticks: {\n    beginAtZero: true,\n    max: undefined,\n    precision: 0,\n    callback: (value) => formatNumber(value),\n  },\n  gridLines: {\n    color: 'rgba(0, 0, 0, 0.07)',\n    drawBorder: false,\n    tickMarkLength: 6,\n  },\n};\n\nconst xAxisDefaults = {\n  gridLines: {\n    color: 'rgba(0, 0, 0, 0)',\n  },\n};\n\nexport {defaultOptions, formatNumber, yAxisDefaults, xAxisDefaults};\n","export const STATE_CODES = {\n    AA: 'Addis Abeba',\n    AF: 'Afar',\n    AM: 'Amhara',\n    BG: 'Beneshangul Gumuz',\n    GA: 'Gambela',\n    OR: 'Oromia',\n    SO: 'Somali',\n    DD: 'Dire Dawa',\n    HR: 'Hareri',\n    SN: 'SNNP',\n    TG: 'Tigray',\n};\n\nconst stateCodes = [];\nconst reverseStateCodes = {};\nObject.keys(STATE_CODES).map((key, index) => {\n    reverseStateCodes[STATE_CODES[key]] = key;\n    stateCodes.push({code: key, name: STATE_CODES[key]});\n    return null;\n});\n","import {\n    STATE_CODES,\n} from '../constants';\n\nexport const getStateName = (code) => {\n    return STATE_CODES[code.toUpperCase()];\n};\n\nexport const capitalize = (s) => {\n    if (typeof s !== 'string') return '';\n    return s.charAt(0).toUpperCase() + s.slice(1);\n};\n\n","import {defaultOptions, xAxisDefaults, yAxisDefaults} from './chart-defaults';\n\nimport {getStateName} from '../../utils/commonfunctions';\n\nimport {parse} from 'date-fns';\nimport deepmerge from 'deepmerge';\nimport React from 'react';\nimport {Line} from 'react-chartjs-2';\n\nfunction AllStatesChart(props) {\n  const dates = [];\n  const chartReference = React.createRef();\n\n  if (!props.data || props.data.length === 0) {\n    return <div></div>;\n  }\n\n  const statesData = new Map();\n\n  props.data.forEach((data) => {\n    if (data.status !== 'Confirmed') {\n      return;\n    }\n\n    Object.keys(data).forEach((key) => {\n      if (key === 'date') {\n        const date = parse(data.date, 'dd-MMM-yy', new Date());\n        dates.push(date);\n      }\n\n      if (key === 'status' || key === 'date') {\n        return;\n      }\n\n      if (!statesData.has(key)) {\n        statesData.set(key, []);\n      }\n      const previousValue =\n        statesData.get(key).length > 0\n          ? parseInt(statesData.get(key)[statesData.get(key).length - 1])\n          : 0;\n      const currentValue = data[key] !== '' ? parseInt(data[key]) : 0;\n      statesData.get(key).push(previousValue + currentValue);\n    });\n  });\n\n  const sortedMap = new Map(\n    [...statesData.entries()].sort((a, b) => {\n      return a[1][a[1].length - 1] < b[1][b[1].length - 1] ? 1 : -1;\n    })\n  );\n\n  const colors = [\n    '#718af0',\n    '#7dd6fa',\n    '#59b3aa',\n    '#9bc26b',\n    '#e5d22f',\n    '#ffb041',\n    '#ff8a66',\n    '#db6b8f',\n    '#bd66cc',\n    '#8e8e8e',\n  ];\n\n  let index = 0;\n  const datasets = [];\n  sortedMap.forEach((data, key) => {\n    if (key === 'tt') {\n      return;\n    }\n\n    if (index >= 10) {\n      return;\n    }\n\n    datasets.push({\n      borderWidth: 2,\n      data: statesData.get(key),\n      borderCapStyle: 'round',\n      pointBackgroundColor: colors[index],\n      label: getStateName(key),\n      borderColor: colors[index],\n      pointHoverRadius: 0.5,\n    });\n\n    index++;\n  });\n\n  const dataset = {\n    labels: dates,\n    datasets: datasets,\n  };\n\n  const options = deepmerge(defaultOptions, {\n    tooltips: {\n      mode: 'index',\n    },\n    elements: {\n      point: {\n        radius: 0,\n      },\n      line: {\n        tension: 0,\n      },\n    },\n    legend: {\n      labels: {\n        boxWidth: 20,\n        fontSize: 11,\n      },\n    },\n    scales: {\n      yAxes: [\n        deepmerge(yAxisDefaults, {\n          type: 'linear',\n          ticks: {\n            beginAtZero: true,\n            max: undefined,\n            precision: 0,\n          },\n          scaleLabel: {\n            display: false,\n            labelString: 'Total Cases',\n          },\n        }),\n      ],\n      xAxes: [\n        deepmerge(xAxisDefaults, {\n          type: 'time',\n          time: {\n            unit: 'day',\n            tooltipFormat: 'MMM DD',\n            stepSize: 7,\n            displayFormats: {\n              millisecond: 'MMM DD',\n              second: 'MMM DD',\n              minute: 'MMM DD',\n              hour: 'MMM DD',\n              day: 'MMM DD',\n              week: 'MMM DD',\n              month: 'MMM DD',\n              quarter: 'MMM DD',\n              year: 'MMM DD',\n            },\n          },\n          gridLines: {\n            color: 'rgba(0, 0, 0, 0)',\n          },\n        }),\n      ],\n    },\n  });\n\n  function toggleSelection() {\n    // Get reference of chartInstance and update it\n    const ci = chartReference.current.chartInstance;\n    for (let i = 0; i < ci.data.datasets.length; i++) {\n      const meta = ci.getDatasetMeta(i);\n      meta.hidden =\n        meta.hidden === null\n          ? !chartReference.current.chartInstance.data.datasets[i].hidden\n          : null;\n    }\n    ci.update();\n  }\n\n  return (\n    <div className=\"charts-header\">\n      <div className=\"chart-title\">{props.title}</div>\n      <div className=\"chart-content\">\n        <Line data={dataset} options={options} ref={chartReference} />\n      </div>\n      <div className=\"chart-note\" style={{marginTop: '0px', height: '30px'}}>\n        <button onClick={toggleSelection}>Toggle Selection</button>\n      </div>\n    </div>\n  );\n}\n\nexport default AllStatesChart;\n","import {\n    defaultOptions,\n    xAxisDefaults,\n    yAxisDefaults,\n    formatNumber,\n} from './chart-defaults';\n\nimport {format, parse} from 'date-fns';\nimport deepmerge from 'deepmerge';\nimport React from 'react';\nimport {Bar, defaults} from 'react-chartjs-2';\n\nfunction DailyConfirmedChart(props) {\n    const dates = [];\n    const confirmed = [];\n    const recovered = [];\n    const deceased = [];\n\n    if (!props.timeseries || props.timeseries.length === 0) {\n        return <div></div>;\n    }\n\n    props.timeseries.forEach((data, index) => {\n        const date = parse(data.date, 'dd MMMM', new Date(2020, 3, 13));\n        dates.push(format(date, 'dd MMM'));\n        confirmed.push(data.dailyconfirmed);\n        recovered.push(data.dailyrecovered);\n        deceased.push(data.dailydeceased);\n    });\n\n    const barDataSet = {\n        labels: dates,\n        datasets: [\n            {\n                data: recovered,\n                label: 'Recovered',\n                backgroundColor: '#7ebf80',\n            },\n            {\n                data: deceased,\n                label: 'Deaths',\n                backgroundColor: '#6c757d',\n            },\n            {\n                data: confirmed,\n                label: 'Confirmed',\n                backgroundColor: '#ff6862',\n            },\n        ],\n    };\n\n    const options = deepmerge(defaultOptions, {\n        tooltips: {\n            mode: 'index',\n        },\n        legend: {\n            display: true,\n            reverse: true,\n            labels: {\n                usePointStyle: true, // Required to change pointstyle to 'rectRounded' from 'circle'\n                generateLabels: (chart) => {\n                    const labels = defaults.global.legend.labels.generateLabels(chart);\n                    labels.forEach((label) => {\n                        label.pointStyle = 'rectRounded';\n                    });\n                    return labels;\n                },\n            },\n        },\n        scales: {\n            xAxes: [\n                deepmerge(xAxisDefaults, {\n                    stacked: true,\n                }),\n            ],\n            yAxes: [\n                deepmerge(yAxisDefaults, {\n                    stacked: true,\n                    ticks: {\n                        callback: (value) => formatNumber(value),\n                    },\n                }),\n            ],\n        },\n    });\n\n    return (\n        <div className=\"charts-header\">\n            <div className=\"chart-title\">{props.title}</div>\n            <div className=\"chart-content\">\n                <Bar data={barDataSet} options={options}/>\n            </div>\n        </div>\n    );\n}\n\nexport default DailyConfirmedChart;\n","import {getStateName} from '../../utils/commonfunctions';\n\nimport {parse} from 'date-fns';\nimport React from 'react';\nimport {Line, defaults} from 'react-chartjs-2';\n\nfunction GrowthTrendChart(props) {\n  const dates = [];\n\n  defaults.global.elements.line.fill = false;\n\n  defaults.global.tooltips.intersect = false;\n  defaults.global.tooltips.mode = 'nearest';\n  defaults.global.tooltips.position = 'average';\n  defaults.global.tooltips.backgroundColor = 'rgba(255, 255, 255, 0.6)';\n  defaults.global.tooltips.displayColors = false;\n  defaults.global.tooltips.borderColor = '#c62828';\n  defaults.global.tooltips.borderWidth = 1;\n  defaults.global.tooltips.titleFontColor = '#000';\n  defaults.global.tooltips.bodyFontColor = '#000';\n  defaults.global.tooltips.caretPadding = 4;\n  defaults.global.tooltips.intersect = false;\n  defaults.global.tooltips.mode = 'nearest';\n  defaults.global.tooltips.position = 'nearest';\n\n  defaults.global.legend.display = true;\n  defaults.global.legend.position = 'bottom';\n\n  defaults.global.hover.intersect = false;\n\n  if (!props.data || props.data.length === 0) {\n    return <div></div>;\n  }\n\n  const statesData = new Map();\n  const statesDailyData = new Map();\n\n  props.data.forEach((data, index) => {\n    if (data.status !== 'Confirmed') {\n      return;\n    }\n\n    Object.keys(data).forEach((key) => {\n      if (key === 'date') {\n        const date = parse(data.date, 'dd-MMM-yy', new Date());\n        dates.push(date);\n      }\n\n      if (key === 'status' || key === 'date') {\n        return;\n      }\n\n      const currentValue = data[key] !== '' ? parseInt(data[key]) : 0;\n\n      if (currentValue === 0 && !statesData.has(key)) {\n        return;\n      }\n\n      if (!statesData.has(key)) {\n        statesData.set(key, []);\n        statesDailyData.set(key, []);\n      }\n      const previousValue =\n        statesData.get(key).length > 0\n          ? parseInt(statesData.get(key)[statesData.get(key).length - 1].x)\n          : 0;\n\n      const stateData = statesDailyData.get(key);\n      let weekSum = 0;\n      for (let i = 1; i <= 7; ++i) {\n        const idx = stateData.length - i;\n        if (idx >= 0) {\n          weekSum += stateData[idx];\n        }\n      }\n      statesData.get(key).push({x: previousValue + currentValue, y: weekSum});\n      statesDailyData.get(key).push(currentValue);\n    });\n  });\n\n  const sortedMap = new Map(\n    [...statesData.entries()].sort((a, b) => {\n      return a[1][a[1].length - 1].x < b[1][b[1].length - 1].x ? 1 : -1;\n    })\n  );\n\n  const colors = [\n    '#ff073a',\n    '#28a745',\n    '#342ead',\n    '#7D5BA6',\n    '#DD7596',\n    '#16c8f0',\n    '#f67575',\n    '#2b580c',\n    '#9D44B5',\n    '#91132d',\n    '#6D9DC5',\n    '#2b580c',\n    '#6c757d',\n    '#f67575',\n    '#d4f8e8',\n  ];\n\n  let index = 0;\n  const datasets = [];\n  sortedMap.forEach((data, key) => {\n    if (key === 'tt') {\n      return;\n    }\n\n    if (index >= 10) {\n      return;\n    }\n\n    datasets.push({\n      data: statesData.get(key),\n      label: getStateName(key),\n      order: index,\n      borderWidth: 1.0,\n      borderCapStyle: 'round',\n      borderColor: colors[index],\n      pointBackgroundColor: colors[index],\n      pointHoverRadius: 1.0,\n    });\n\n    index++;\n  });\n\n  const dataset = {\n    datasets: datasets,\n  };\n\n  const options = {\n    responsive: true,\n    events: ['click', 'mousemove', 'mouseout', 'touchstart', 'touchmove'],\n    maintainAspectRatio: false,\n    tooltips: {\n      mode: 'index',\n      backgroundColor: 'rgba(0, 0, 0, 0.9)',\n      borderColor: 'rgba(0, 0, 0, 0)',\n      bodyFontColor: 'white',\n      titleFontColor: 'white',\n      displayColors: true,\n    },\n    elements: {\n      point: {\n        radius: 0,\n      },\n      line: {\n        cubicInterpolationMode: 'monotone',\n      },\n    },\n    layout: {\n      padding: {\n        left: 20,\n        right: 20,\n        top: 0,\n        bottom: 20,\n      },\n    },\n    scales: {\n      yAxes: [\n        {\n          type: 'logarithmic',\n          ticks: {\n            beginAtZero: true,\n            min: 1,\n            max: 2000,\n            precision: 0,\n            callback: function (value, index, values) {\n              return Number(value.toString());\n            },\n          },\n          scaleLabel: {\n            display: true,\n            labelString: 'New Cases (since last 7 days)',\n          },\n          gridLines: {\n            color: 'rgba(0, 0, 0, 0)',\n          },\n        },\n      ],\n      xAxes: [\n        {\n          type: 'logarithmic',\n          ticks: {\n            beginAtZero: true,\n            min: 0,\n            max: 2000,\n            precision: 0,\n            callback: function (value, index, values) {\n              return Number(value.toString());\n            },\n          },\n          scaleLabel: {\n            display: true,\n            labelString: 'Total Cases',\n          },\n          gridLines: {\n            color: 'rgba(0, 0, 0, 0)',\n          },\n        },\n      ],\n    },\n  };\n\n  return (\n    <div className=\"charts-header\">\n      <div className=\"chart-title\">{props.title}</div>\n      <div className=\"chart-content\">\n        <Line data={dataset} options={options} />\n      </div>\n    </div>\n  );\n}\n\nexport default GrowthTrendChart;\n","import {defaultOptions, xAxisDefaults, yAxisDefaults} from './chart-defaults';\n\nimport {parse} from 'date-fns';\nimport deepmerge from 'deepmerge';\nimport React from 'react';\nimport {Line} from 'react-chartjs-2';\n\nfunction TotalConfirmedChart(props) {\n    const dates = [];\n    const confirmed = [];\n    const recovered = [];\n    const deceased = [];\n\n    if (!props.timeseries || props.timeseries.length === 0) {\n        return <div></div>;\n    }\n\n    props.timeseries.forEach((data, index) => {\n        const date = parse(data.date, 'dd MMMM', new Date(2020, 3, 13));\n        dates.push(date);\n        confirmed.push(data.totalconfirmed);\n        recovered.push(data.totalrecovered);\n        deceased.push(data.totaldeceased);\n    });\n\n    const dataset = {\n        labels: dates,\n        datasets: [\n            {\n                borderWidth: 2,\n                data: confirmed,\n                borderCapStyle: 'round',\n                pointBackgroundColor: '#ff6862',\n                label: 'Confirmed',\n                borderColor: '#ff6862',\n                pointHoverRadius: 2,\n            },\n            {\n                borderWidth: 2,\n                data: recovered,\n                borderCapStyle: 'round',\n                pointBackgroundColor: '#7ebf80',\n                label: 'Recovered',\n                borderColor: '#7ebf80',\n                pointHoverRadius: 2,\n            },\n            {\n                borderWidth: 2,\n                data: deceased,\n                borderCapStyle: 'round',\n                pointBackgroundColor: '#6c757d',\n                label: 'Deaths',\n                borderColor: '#6c757d',\n                pointHoverRadius: 2,\n            },\n        ],\n    };\n\n    const options = deepmerge(defaultOptions, {\n        elements: {\n            point: {\n                radius: 0,\n            },\n            line: {\n                tension: 0.1,\n            },\n        },\n        scales: {\n            yAxes: [\n                deepmerge(yAxisDefaults, {\n                    scaleLabel: {\n                        display: false,\n                        labelString: 'Total Cases',\n                    },\n                }),\n            ],\n            xAxes: [\n                deepmerge(xAxisDefaults, {\n                    type: 'time',\n                    time: {\n                        unit: 'day',\n                        tooltipFormat: 'MMM DD',\n                        stepSize: 7,\n                        displayFormats: {\n                            millisecond: 'MMM DD',\n                            second: 'MMM DD',\n                            minute: 'MMM DD',\n                            hour: 'MMM DD',\n                            day: 'MMM DD',\n                            week: 'MMM DD',\n                            month: 'MMM DD',\n                            quarter: 'MMM DD',\n                            year: 'MMM DD',\n                        },\n                    },\n                }),\n            ],\n        },\n    });\n\n    if (props.mode) {\n        options.scales.yAxes = [\n            {\n                type: 'logarithmic',\n                ticks: {\n                    min: 0,\n                    max: 10000,\n                    callback: function (value, index, values) {\n                        if (value === 10000) return '10000';\n                        if (value === 2000) return '2500';\n                        if (value === 500) return '500';\n                        if (value === 100) return '100';\n                        if (value === 20) return '25';\n                        if (value === 5) return '5';\n                        if (value === 0) return '0';\n                        return null;\n                    },\n                },\n                scaleLabel: {\n                    display: false,\n                    labelString: 'Total Cases',\n                },\n            },\n        ];\n    }\n\n    return (\n        <div className=\"charts-header\">\n            <div className=\"chart-title\">{props.title}</div>\n            <div className=\"chart-content\">\n                <Line data={dataset} options={options}/>\n            </div>\n        </div>\n    );\n}\n\nexport default TotalConfirmedChart;\n","import {defaultOptions, xAxisDefaults, formatNumber} from './chart-defaults';\n\nimport deepmerge from 'deepmerge';\nimport React from 'react';\nimport {Bar} from 'react-chartjs-2';\n\nfunction AgeChart(props) {\n  const ages = Array(10).fill(0);\n  if (!props.data || props.data.length === 0) {\n    return <div></div>;\n  }\n\n  props.data.forEach((patient) => {\n    if (patient.agebracket) {\n      const age = parseInt(patient.agebracket);\n      for (let i = 0; i < 10; i++) {\n        if (age > i * 10 && age <= (i + 1) * 10) {\n          ages[i]++;\n        }\n      }\n    }\n  });\n\n  const chartData = {\n    labels: [\n      '0-10',\n      '11-20',\n      '21-30',\n      '31-40',\n      '41-50',\n      '51-60',\n      '61-70',\n      '71-80',\n      '81-90',\n      '91-100',\n    ],\n    datasets: [\n      {\n        data: ages,\n        label: 'Cases',\n        backgroundColor: '#bc79c9',\n      },\n    ],\n  };\n\n  const chartOptions = deepmerge(defaultOptions, {\n    legend: {\n      display: false,\n    },\n    scales: {\n      xAxes: [\n        deepmerge(xAxisDefaults, {\n          stacked: true,\n        }),\n      ],\n      yAxes: [\n        {\n          stacked: true,\n        },\n      ],\n    },\n    events: ['mousemove', 'mouseout', 'touchstart', 'touchmove', 'touchend'],\n    responsive: true,\n    maintainAspectRatio: false,\n    tooltips: {\n      mode: 'index',\n    },\n  });\n\n  const sampleSize = ages.reduce((a, b) => a + b, 0);\n\n  return (\n    <div className=\"charts-header\">\n      <div className=\"chart-title\">{props.title}</div>\n      <div className=\"chart-content doughnut\">\n        <Bar data={chartData} options={chartOptions} />\n      </div>\n      <div className=\"chart-note\">\n        Sample Size: {formatNumber(sampleSize)} patients\n      </div>\n    </div>\n  );\n}\n\nexport default AgeChart;\n","import {defaultOptions, formatNumber} from './chart-defaults';\n\nimport deepmerge from 'deepmerge';\nimport React from 'react';\nimport {Doughnut} from 'react-chartjs-2';\n\nfunction GenderChart(props) {\n  let male = 0;\n  let female = 0;\n\n  if (!props.data || props.data.length === 0) {\n    return <div></div>;\n  }\n\n  props.data.forEach((patient) => {\n    if (patient.gender === 'M') {\n      male++;\n    } else if (patient.gender === 'F') {\n      female++;\n    }\n  });\n\n  const chartData = {\n    datasets: [\n      {\n        data: [male, female],\n        backgroundColor: ['#6497f3', '#ea6e9a'],\n        label: 'Hola',\n      },\n    ],\n    labels: ['Male', 'Female'],\n  };\n\n  const chartOptions = deepmerge(defaultOptions, {\n    tooltips: {\n      mode: 'point',\n      position: 'nearest',\n      callbacks: {\n        label: function (tooltipItem, data) {\n          const dataset = data.datasets[tooltipItem.datasetIndex];\n          const meta = dataset._meta[Object.keys(dataset._meta)[0]];\n          const total = meta.total;\n          const currentValue = dataset.data[tooltipItem.index];\n          const percentage = parseFloat(\n            ((currentValue / total) * 100).toFixed(1)\n          );\n          return formatNumber(currentValue) + ' (' + percentage + '%)';\n        },\n        title: function (tooltipItem, data) {\n          return data.labels[tooltipItem[0].index];\n        },\n      },\n    },\n  });\n\n  return (\n    <div className=\"charts-header\">\n      <div className=\"chart-title\">{props.title}</div>\n      <div className=\"chart-content doughnut\">\n        <Doughnut data={chartData} options={chartOptions} />\n      </div>\n      <div className=\"chart-note\">\n        Sample size: {formatNumber(male + female)} patients\n      </div>\n    </div>\n  );\n}\n\nexport default GenderChart;\n","import {formatNumber} from './chart-defaults';\n\nimport React from 'react';\nimport {Doughnut} from 'react-chartjs-2';\n\nfunction NationalityChart(props) {\n  if (!props.data || props.data.length === 0) {\n    return <div></div>;\n  }\n\n  const nationality = {};\n\n  props.data.forEach((patient) => {\n    if (!patient.nationality) {\n      return;\n    }\n    if (!nationality.hasOwnProperty(patient.nationality.toLowerCase())) {\n      nationality[patient.nationality.toLowerCase()] = 0;\n    }\n    nationality[patient.nationality.toLowerCase()]++;\n  });\n\n  const data = [];\n  const labels = [];\n\n  Object.keys(nationality).forEach((country) => {\n    if (country) {\n      labels.push(country.toUpperCase());\n      data.push(nationality[country]);\n    }\n  });\n\n  const chartData = {\n    datasets: [\n      {\n        data: data,\n        backgroundColor: [\n          '#ff8a66',\n          '#718af0',\n          '#7dd6fa',\n          '#59b3aa',\n          '#9bc26b',\n          '#e5d22f',\n          '#ffb041',\n          '#db6b8f',\n          '#bd66cc',\n          '#8e8e8e',\n        ],\n      },\n    ],\n    labels: labels,\n  };\n\n  const chartOptions = {\n    layout: {\n      padding: {\n        left: 20,\n        right: 20,\n        top: 0,\n        bottom: 20,\n      },\n    },\n    legend: {\n      display: false,\n    },\n    responsive: true,\n    maintainAspectRatio: false,\n    tooltips: {\n      mode: 'point',\n      backgroundColor: 'rgba(0, 0, 0, 0.8)',\n      borderColor: 'rgba(0, 0, 0, 0)',\n      bodyFontColor: 'white',\n      titleFontColor: 'white',\n      events: ['mousemove', 'mouseout', 'touchstart', 'touchmove', 'touchend'],\n      callbacks: {\n        label: function (tooltipItem, data) {\n          const dataset = data.datasets[tooltipItem.datasetIndex];\n          const meta = dataset._meta[Object.keys(dataset._meta)[0]];\n          const total = meta.total;\n          const currentValue = dataset.data[tooltipItem.index];\n          const percentage = parseFloat(\n            ((currentValue / total) * 100).toFixed(1)\n          );\n          return currentValue + ' (' + percentage + '%)';\n        },\n        title: function (tooltipItem, data) {\n          return data.labels[tooltipItem[0].index];\n        },\n      },\n    },\n  };\n\n  const sampleSize = data.reduce((a, b) => a + b, 0);\n\n  return (\n    <div className=\"charts-header\">\n      <div className=\"chart-title\">{props.title}</div>\n      <div className=\"chart-content doughnut\">\n        <Doughnut data={chartData} options={chartOptions} />\n      </div>\n      <div className=\"chart-note\">\n        Sample size: {formatNumber(sampleSize)} patients\n      </div>\n    </div>\n  );\n}\n\nexport default NationalityChart;\n","import AllStatesChart from './allstates';\nimport DailyConfirmedChart from './dailyconfirmedchart';\nimport GrowthTrendChart from './growthtrendchart';\nimport TotalConfirmedChart from './totalconfirmedchart';\n\nimport AgeChart from './agechart';\nimport GenderChart from './genderchart';\nimport NationalityChart from './nationalitychart';\n\nimport axios from 'axios';\nimport React, {useState, useEffect} from 'react';\nimport {Col, Row} from \"react-bootstrap\";\n\nfunction Chart() {\n    const [fetched, setFetched] = useState(false);\n    const [timeseries, setTimeseries] = useState([]);\n    const [rawData, setRawData] = useState([]);\n    const [statesTimeSeries, setStatesTimeSeries] = useState([]);\n\n    useEffect(() => {\n        if (fetched === false) {\n            getStates();\n        }\n    }, [fetched]);\n\n    const getStates = async () => {\n        try {\n            const [\n                response,\n                rawDataResponse,\n                stateDailyResponse,\n            ] = await Promise.all([\n                axios.get('https://covid19-ethiopia.qulph.com/api/data.json'),\n                axios.get('https://covid19-ethiopia.qulph.com/api/raw_data.json'),\n                axios.get('https://covid19-ethiopia.qulph.com/api/states_daily.json'),\n            ]);\n            setTimeseries(response.data.cases_time_series);\n            setStatesTimeSeries(stateDailyResponse.data.states_daily);\n            setRawData(rawDataResponse.data.raw_data);\n            setFetched(true);\n        } catch (err) {\n            console.log(err);\n        }\n    };\n\n    return (\n        <div className=\"cards-container\">\n            <Row className=\"cards\">\n                <Col className=\"card fadeInUp\" style={{animationDelay: '0.7s'}}>\n                    <TotalConfirmedChart title=\"Total Cases\" timeseries={timeseries}/>\n                </Col>\n                <Col className=\"card fadeInUp\" style={{animationDelay: '0.7s'}}>\n                    <DailyConfirmedChart title=\"Daily Cases\" timeseries={timeseries}/>\n                </Col>\n            </Row>\n            <Row className=\"cards\">\n                <Col className=\"card card-big fadeInUp\"\n                     style={{animationDelay: '0.7s'}}>\n                    <AllStatesChart\n                        title=\"Total Cases by State\"\n                        data={statesTimeSeries}\n                    />\n                </Col>\n                <Col className=\"card fadeInUp\" style={{animationDelay: '0.7s'}}>\n                    <GrowthTrendChart\n                        title=\"States - Growth Trend\"\n                        data={statesTimeSeries}\n                    />\n                </Col>\n            </Row>\n            <Row className=\"cards\">\n                <Col md={4} className=\"card fadeInUp\" style={{animationDelay: '0.7s'}}>\n                    <GenderChart title=\"Patient Gender\" data={rawData} />\n                </Col>\n                <Col md={4} className=\"card fadeInUp\" style={{animationDelay: '0.7s'}}>\n                    <AgeChart title=\"Patients by Age\" data={rawData} />\n                </Col>\n                <Col md={4} className=\"card fadeInUp\" style={{animationDelay: '0.7s'}}>\n                    <NationalityChart title=\"Patients by  Nationality\" data={rawData} />\n                </Col>\n            </Row>\n        </div>\n    );\n}\n\nexport default Chart;\n","import React from 'react';\nimport { Card } from 'baseui/card';\n\nexport default function StyledCard({ children, style, ...props }) {\n  return (\n    <Card\n      overrides={{\n        Root: {\n          style: ({ $theme }) => {\n            const styleOverrides = style ? style($theme) : {};\n            return {\n              width: '100%',\n              boxSizing: 'border-box',\n              borderRadius: $theme.borders.radius200,\n              boxShadow: $theme.lighting.shadow500,\n              ...styleOverrides\n            };\n          }\n        }\n      }}\n      {...props}\n    >\n      {children}\n    </Card>\n  );\n}","import React from 'react';\nimport { useStyletron } from 'baseui';\n\nexport default function Marker({ size, casesCount, deathsCount }) {\n  const [, theme] = useStyletron();\n  const offset = (deathsCount / casesCount) * 100;\n\n  return (\n    <svg\n      className=\"marker\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={size || '32'}\n      height={size || '32'}\n      viewBox=\"0 0 32 32\"\n    >\n      {deathsCount && \n        <defs>\n          <linearGradient id={`combined-${offset}`} x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\n            <stop offset={`${100 - offset}%`} stopColor={theme.colors.negative} />\n            <stop offset={`${offset}%`}  stopColor={theme.colors.primary} />\n          </linearGradient>\n        </defs>\n      }\n\n      <circle\n        className=\"pulse\"\n        cx=\"50%\"\n        cy=\"50%\"\n        r=\"8px\"\n        fill={deathsCount ? `url(#combined-${offset})` : theme.colors.negative}\n      ></circle>\n      {casesCount && (\n        <text className=\"text\" x=\"50%\" y=\"50%\" fontSize={'60%'} fill=\"white\" textAnchor=\"middle\" dy=\".3em\">{casesCount}</text>\n      )}\n    </svg>\n  )\n}","import React from 'react';\nimport ContentLoader from 'react-content-loader';\nimport {useStyletron} from 'baseui';\n\nexport default function Loader() {\n  const [, theme] = useStyletron();\n\n  return (\n    <ContentLoader\n      speed={0.6}\n      width={300}\n      height={200}\n      display={'block'}\n      viewBox=\"0 0 300 200\"\n      backgroundColor={theme.colors.backgroundTertiary}\n      foregroundColor={theme.colors.backgroundSecondary}\n    >\n      <rect x=\"20\" y=\"6\" rx=\"2\" ry=\"2\" width=\"80\" height=\"22\" />\n      <rect x=\"110\" y=\"6\" rx=\"2\" ry=\"2\" width=\"200\" height=\"22\" />\n      <rect x=\"40\" y=\"40\" rx=\"2\" ry=\"2\" width=\"60\" height=\"22\" />\n      <rect x=\"110\" y=\"40\" rx=\"2\" ry=\"2\" width=\"170\" height=\"22\" />\n      <rect x=\"30\" y=\"74\" rx=\"2\" ry=\"2\" width=\"70\" height=\"22\" />\n      <rect x=\"110\" y=\"74\" rx=\"2\" ry=\"2\" width=\"140\" height=\"22\" />\n      <rect x=\"20\" y=\"108\" rx=\"2\" ry=\"2\" width=\"80\" height=\"22\" />\n      <rect x=\"110\" y=\"108\" rx=\"2\" ry=\"2\" width=\"100\" height=\"22\" />\n      <rect x=\"50\" y=\"142\" rx=\"2\" ry=\"2\" width=\"50\" height=\"22\" />\n      <rect x=\"110\" y=\"142\" rx=\"2\" ry=\"2\" width=\"100\" height=\"22\" />\n      <rect x=\"40\" y=\"176\" rx=\"2\" ry=\"2\" width=\"60\" height=\"22\" />\n      <rect x=\"110\" y=\"176\" rx=\"2\" ry=\"2\" width=\"60\" height=\"22\" />\n    </ContentLoader>\n  );\n}","import React from 'react';\nimport { Label3 } from 'baseui/typography';\nimport { Block } from 'baseui/block';\nimport { Bar, BarChart, Tooltip, XAxis, YAxis, ResponsiveContainer } from 'recharts';\nimport { useStyletron } from 'baseui';\nimport Loader from \"./Loader\"\nimport { useData } from '../../contexts/DataContext';\n\nexport default function CitiesSplit({ isLoading, data }) {\n  const [, theme] = useStyletron();\n  const { setClickedCity } = useData();\n\n  return (\n    <>\n      <Label3>Division by Location</Label3>\n      <Block\n        $style={{\n          height: '196px',\n          overflow: 'auto',\n          margin: '12px 0 20px'\n        }}\n      >\n        {isLoading && <Loader />}\n        {data && <ResponsiveContainer height={data.length * 32} width={'99%'}>\n          <BarChart\n            data={data}\n            layout=\"vertical\"\n          >\n            <YAxis\n              dataKey=\"city\"\n              type=\"category\"\n              tick={{\n                fill: theme.colors.contentPrimary,\n                cursor: 'pointer'\n              }}\n              width={160}\n              onClick={({ value }) => setClickedCity(value)}\n            />\n            <XAxis type=\"number\" hide />\n            <Tooltip\n              formatter={value => [value, 'Count']}\n              contentStyle={{\n                backgroundColor: theme.colors.backgroundPrimary,\n                borderColor: theme.colors.backgroundTertiary,\n              }}\n              cursor={{ fill: theme.colors.backgroundTertiary }}\n            />\n            <Bar dataKey=\"count\" fill={theme.colors.accent} />\n          </BarChart>\n        </ResponsiveContainer>}\n      </Block>\n    </>\n  );\n}\n","import React, { useState } from 'react';\nimport {useStyletron} from 'baseui';\nimport {Search} from 'baseui/icon';\nimport {Input, SIZE} from 'baseui/input';\nimport {\n  StyledBody as StyledTableBody,\n  StyledCell,\n  StyledHead,\n  StyledHeadCell,\n  StyledRow,\n  StyledTable\n} from 'baseui/table';\nimport {Label3, Paragraph3, Paragraph4} from 'baseui/typography';\nimport {StyledLink} from 'baseui/link';\nimport {ProgressBar} from 'baseui/progress-bar';\nimport { useData } from '../../contexts/DataContext';\n\nfunction SearchIcon() {\n  const [css, theme] = useStyletron();\n  return (\n    <div\n      className={css({\n        display: 'flex',\n        alignItems: 'center',\n        paddingLeft: theme.sizing.scale500,\n      })}\n    >\n      <Search size=\"18px\" />\n    </div>\n  );\n}\n\nconst compare = (originalText = '', filterValue = '') =>\n  originalText.toLowerCase().includes(filterValue.toLowerCase().trim());\n\nexport default function Recent({ isLoading, data }) {\n  const [, theme] = useStyletron();\n  const [filter, setFilter] = useState('');\n  const filteredData =\n    data?.filter(\n      ({ city, date }) => compare(city, filter) || compare(date, filter)\n    ) || [];\n  const { setClickedCity } = useData();\n\n  return (\n    <>\n      <Label3 $style={{ marginBottom: '12px' }}>\n        Recent\n      </Label3>\n      <Input\n        size={SIZE.compact}s\n        overrides={{Before: SearchIcon}}\n        placeholder=\"Search\"\n        onChange={event => setFilter(event.target.value)}\n        value={filter}\n      />\n      <StyledTable\n        $style={{\n          borderColor: theme.colors.backgroundTertiary,\n          marginTop: '12px',\n          minHeight: '100px'\n        }}\n      >\n        {isLoading && <ProgressBar\n          infinite\n          overrides={{\n            Bar: {\n              style: {\n                marginBottom: 0,\n                marginLeft: 0,\n                marginRight: 0,\n                marginTop: 0,\n              },\n            },\n          }}/>}\n\n        <StyledHead role=\"row\">\n          <StyledHeadCell role=\"columnheader\">\n            <Paragraph3 margin={0}>Date</Paragraph3>\n          </StyledHeadCell>\n          <StyledHeadCell role=\"columnheader\">\n            <Paragraph3 margin={0}>Count</Paragraph3>\n          </StyledHeadCell>\n          <StyledHeadCell role=\"columnheader\">\n            <Paragraph3 margin={0}>Location</Paragraph3>\n          </StyledHeadCell>\n        </StyledHead>\n        <StyledTableBody>\n          {filteredData.slice().reverse().map(({date, count, city, source}, index) => (\n            <StyledRow key={index}>\n              <StyledCell>\n                <Paragraph4\n                  margin={0}\n                >\n                  <StyledLink href={source} target=\"_blank\">{date}</StyledLink>\n                </Paragraph4>\n              </StyledCell>\n              <StyledCell>\n                <Paragraph4\n                  margin={0}\n                >\n                  {count}\n                </Paragraph4>\n              </StyledCell>\n              <StyledCell>\n                <Paragraph4\n                  margin={0}\n                >\n                  {city ? <StyledLink onClick={() => setClickedCity(city)} $style={{ cursor: 'pointer' }}>{city}</StyledLink> : 'Not Found' }\n                </Paragraph4>\n              </StyledCell>\n            </StyledRow>\n          ))}\n        </StyledTableBody>\n      </StyledTable>\n    </>\n  );\n}\n","import React, {useEffect, useState} from 'react';\nimport {StyledBody} from 'baseui/card';\nimport {Tab, Tabs} from 'baseui/tabs';\nimport {StyledCard} from '..';\n\nimport {useData} from '../../contexts/DataContext';\nimport groupBy from 'lodash.groupby';\nimport {sum} from '../../helpers/misc';\nimport CitiesSplit from './CitiesSplit';\nimport Recent from './Recent';\n\nfunction prepareData(cases, cities) {\n    return Object\n        .entries(groupBy(cases, 'city'))\n        .map(([city, data]) => ({city, count: sum(data)}))\n        .filter(({city}) => city !== 'undefined')\n        .sort((a, b) => b.count - a.count);\n}\n\nexport default function DataElement() {\n    const {cases, deaths, cures, isLoading} = useData();\n    const [groupedCases, setGroupedCases] = useState(null);\n    const [groupedDeaths, setGroupedDeaths] = useState(null);\n    const [groupedCures, setGroupedCures] = useState(null);\n    const [activeKey, setActiveKey] = useState('0');\n\n    useEffect(() => {\n        setGroupedCases(prepareData(cases));\n        setGroupedDeaths(prepareData(deaths));\n        setGroupedCures(prepareData(cures));\n    }, [cases, deaths, cures])\n\n    return (\n        <StyledCard\n            style={$theme => ({\n                [$theme.mediaQuery.medium]: {\n                    maxHeight: 'calc(100vh - 200px)',\n                    overflow: 'auto'\n                },\n                [$theme.mediaQuery.large]: {\n                    width: '420px'\n                }\n            })}\n        >\n            <StyledBody>\n                <Tabs\n                    onChange={({activeKey}) => {\n                        setActiveKey(activeKey);\n                    }}\n                    activeKey={activeKey}\n                    overrides={{\n                        TabContent: {\n                            style: {\n                                maxHeight: '400px',\n                                overflow: 'auto',\n                                textAlign: 'left',\n                                padding: '14px'\n                            }\n                        }\n                    }}\n                >\n                    <Tab title=\"Confirmed\">\n                        <CitiesSplit data={groupedCases} isLoading={isLoading}/>\n                        <Recent data={cases} isLoading={isLoading}/>\n                    </Tab>\n                    <Tab title=\"Deaths\">\n                        <CitiesSplit data={groupedDeaths} isLoading={isLoading}/>\n                        <Recent data={deaths} isLoading={isLoading}/>\n                    </Tab>\n                    <Tab title=\"Recovered\">\n                        <CitiesSplit data={groupedCures} isLoading={isLoading}/>\n                        <Recent data={cures} isLoading={isLoading}/>\n                    </Tab>\n                </Tabs>\n            </StyledBody>\n        </StyledCard>\n    );\n}\n","import React, {useState} from 'react';\nimport {Map, DataElement, Contributors, Header, Chart} from '../../components';\n\nimport {useStyletron} from 'baseui';\nimport {Layer} from 'baseui/layer';\nimport {Button, SIZE} from 'baseui/button';\nimport {Block} from 'baseui/block';\nimport {Modal, ModalHeader, ModalBody, ROLE} from 'baseui/modal';\nimport {Paragraph3, Label2, HeadingSmall} from 'baseui/typography';\n\nimport {useTheme} from '../../contexts/ThemeContext';\nimport {StyledLink} from 'baseui/link';\nimport {Tabs, Tab} from 'baseui/tabs';\nimport {FlexGrid, FlexGridItem} from 'baseui/flex-grid';\nimport {Figure} from '../Figures/Figures';\nimport {useData} from '../../contexts/DataContext';\nimport {Col} from \"react-bootstrap\";\n\nfunction CustomTab(props) {\n    return (\n        <Tab\n            overrides={{\n                Tab: {\n                    style: {\n                        flexGrow: 1,\n                        textAlign: 'center',\n                        padding: '10px 0'\n                    }\n                }\n            }}\n            {...props}\n        />\n    )\n}\n\nexport default function Mobile() {\n    const {cases, cures, deaths, allTime, isLoading} = useData();\n    const [isOpen, setIsOpen] = useState(false);\n    const {useDarkTheme, setUseDarkTheme} = useTheme();\n    const [activeKey, setActiveKey] = useState('0');\n    const [css, theme] = useStyletron();\n\n    const total = allTime || {\n        confirmed: 0,\n        recovered: 0,\n        deaths: 0,\n        active: 0,\n        deltaConfirmed: 0,\n        deltaRecovered: 0,\n        deltaDeaths: 0,\n    };\n\n    return (\n        <>\n            <Header/>\n            <div\n                className={css({\n                    display: 'flex',\n                    flexDirection: 'column',\n                    minHeight: '100vh',\n                    width: '100vw',\n                })}\n            >\n                <div\n                    style={{'margin-top':'10px'}}\n                    className={css({\n                        backgroundColor: theme.colors.backgroundPrimary,\n                        padding: theme.sizing.scale600,\n                        paddingBottom: 0\n                    })}\n                >\n                    <HeadingSmall margin={0}>Coronavirus in Ethiopia</HeadingSmall>\n                    <FlexGrid flexGridColumnCount={window.innerWidth > 425 ? 4 : 3}>\n\n                        <FlexGridItem>\n                            <Figure\n                                count={total.confirmed}\n                                delta={total.deltaConfirmed}\n                                isLoading={isLoading}\n                                label=\"Confirmed\"\n                                color={theme.colors.negative}\n                                size=\"compact\"\n                            />\n                        </FlexGridItem>\n                        {window.innerWidth > 425 && (\n                            <FlexGridItem>\n                                <Figure\n                                    count={total.active}\n                                    delta=\"0\"\n                                    isLoading={isLoading}\n                                    label=\"Active\"\n                                    color=\"orange\"\n                                    size=\"compact\"\n                                />\n                            </FlexGridItem>\n                        )}\n                        <FlexGridItem>\n                            <Figure\n                                count={total.recovered}\n                                delta={total.deltaRecovered}\n                                isLoading={isLoading}\n                                label=\"Recovered\"\n                                color={theme.colors.positive}\n                                size=\"compact\"\n                            />\n                        </FlexGridItem>\n\n                        <FlexGridItem>\n                            <Figure\n                                count={total.deaths}\n                                delta={total.deltaDeaths}\n                                isLoading={isLoading}\n                                label=\"Deaths\"\n                                color={theme.colors.primary}\n                                size=\"compact\"\n                            />\n                        </FlexGridItem>\n\n                    </FlexGrid>\n                </div>\n\n                <Tabs\n                    onChange={({activeKey}) => {\n                        setActiveKey(activeKey);\n                    }}\n                    activeKey={activeKey}\n                    overrides={{\n                        Root: {\n                            style: {\n                                flexGrow: 1,\n                                display: 'flex'\n                            }\n                        },\n                        TabBar: {\n                            style: {\n                                display: 'flex'\n                            }\n                        },\n                        TabContent: {\n                            style: ({$active}) => {\n                                return {\n                                    backgroundColor: theme.colors.backgroundPrimary,\n                                    padding: 0,\n                                    flexGrow: 1,\n                                    display: $active ? 'flex' : 'none',\n                                    width: '100vw'\n                                };\n                            }\n                        }\n                    }}\n                >\n                    <CustomTab title=\"Maps\">\n                        <Map className={useDarkTheme ? 'dark-theme' : ''} style={{height: 'auto'}}/>\n                    </CustomTab>\n                    <CustomTab title=\"Statistics\">\n                        <div\n                            className={css({\n                                padding: theme.sizing.scale600,\n                                height: 'auto'\n                            })}\n                        >\n                            <DataElement/>\n                        </div>\n                    </CustomTab>\n                </Tabs>\n            </div>\n            <Layer>\n                <Block position={'fixed'} bottom={'16px'} left={'0px'} display=\"flex\">\n                    <Button\n                        size={SIZE.mini}\n                        onClick={() => setIsOpen(true)}\n                        overrides={{\n                            BaseButton: {\n                                style: ({$theme}) => ({\n                                    borderRadius: $theme.borders.radius200,\n                                    boxShadow: $theme.lighting.shadow500,\n                                    marginLeft: '10px'\n                                })\n                            }\n                        }}\n                    >\n                        Information\n                    </Button>\n                    {/*          <Button\n            size={SIZE.mini}\n            onClick={() => setUseDarkTheme(!useDarkTheme)}\n            overrides={{\n              BaseButton: {\n                style: ({ $theme }) => ({\n                  borderRadius: $theme.borders.radius200,\n                  boxShadow: $theme.lighting.shadow500,\n                  marginLeft: '10px'\n                })\n              }\n            }}\n          >\n            Turn {useDarkTheme ? ' off ' : ' on '} dark mode\n          </Button>*/}\n                    <Modal\n                        onClose={() => setIsOpen(false)}\n                        closeable\n                        isOpen={isOpen}\n                        animate\n                        role={ROLE.dialog}\n                        overrides={{\n                            Dialog: {\n                                style: ({$theme}) => ({\n                                    borderRadius: $theme.borders.radius200\n                                })\n                            }\n                        }}\n                    >\n                        <ModalHeader>Information</ModalHeader>\n                        <ModalBody>\n                            <Paragraph3>\n                                The author is not responsible for the correctness of the data provided. The data may be\n                                out of date.\n                            </Paragraph3>\n                            <Paragraph3>\n                                Author: Anteneh Gebeyaw<br/>\n                                Contact: <StyledLink target=\"_blank\"\n                                                     href=\"mailto:contact@qulph.com\"> contact@qulph.com </StyledLink>\n                                <br/><br/>\n                                More information about cases in Ethiopia is available at&nbsp;\n                                <StyledLink target=\"_blank\"\n                                            href=\"https://covid19.qulph.com\">https://covid19.qulph.com</StyledLink>.\n                            </Paragraph3>\n                            <Paragraph3>\n                                The data provided here is collected from different sources, and mainly from official\n                                handles. If you want help in updating and verifying the data, please contact me.\n                            </Paragraph3>\n                            <StyledLink target=\"_blank\" href=\"https://github.com/agebeyaw/corona\">\n                                https://github.com/agebeyaw/corona\n                            </StyledLink>\n\n                            <Label2 margin=\"20px 0 10px\">Contributors</Label2>\n                            <Contributors/>\n                        </ModalBody>\n                    </Modal>\n                </Block>\n            </Layer>\n            <Layer>\n                <Chart/>\n            </Layer>\n        </>\n    );\n}\n","import React, {useState} from 'react';\nimport {Map, Figures, DataElement, Contributors, Header, Chart, Footer, Sections} from '..';\n\nimport {Layer} from 'baseui/layer';\nimport {Container, Row, Col} from 'react-bootstrap';\nimport {Button, KIND, SIZE} from 'baseui/button';\nimport {Block} from 'baseui/block';\nimport {Modal, ModalHeader, ModalBody, ROLE} from 'baseui/modal';\nimport {Paragraph3, Label2} from 'baseui/typography';\n\nimport {useTheme} from '../../contexts/ThemeContext';\nimport {StyledLink} from 'baseui/link';\n\nexport default function Layout() {\n    const [isOpen, setIsOpen] = useState(false);\n    const {useDarkTheme, setUseDarkTheme} = useTheme();\n\n    return (\n        <>\n            <Header/>\n            <Container fluid>\n                <Row>\n                    <Col md={12}>\n                        <Layer>\n                            <Map className={useDarkTheme ? 'dark-theme' : ''}/>\n                        </Layer>\n                        <Layer>\n                            <Block position={'absolute'} top={0} left={0} width={['100%', '100%', 'auto']}\n                                   margin={['0', '0', '80px']}>\n                                <Figures/>\n                            </Block>\n                        </Layer>\n                        <Layer>\n                            <Block\n                                display={['none', 'none', 'none', 'block']}\n                                position={'absolute'}\n                                top={'80px'}\n                                right={'40px'}\n                                $style={({$theme}) => ({\n                                    [$theme.mediaQuery.medium]: {\n                                        maxHeight: 'calc(100vh - 100px)'\n                                    },\n                                    textAlign: 'right'\n                                })}\n                            >\n                                <DataElement/>\n                                <Button\n                                    $as=\"a\"\n                                    target=\"_blank\"\n                                    style={{'text-decoration': 'none'}}\n                                    href=\"https://charity.gofundme.com/o/en/campaign/helping-amhara-region-covid-19-response-effort/\"\n                                    kind={KIND.secondary}\n                                    overrides={{\n                                        BaseButton: {\n                                            style: ({$theme}) => ({\n                                                borderRadius: $theme.borders.radius200,\n                                                boxShadow: $theme.lighting.shadow500,\n                                                marginTop: '20px'\n                                            })\n                                        }\n                                    }}\n                                >\n                                    Help Amhara Region COVID-19 Response Effort\n                                </Button>\n                            </Block>\n                        </Layer>\n                        <Layer>\n                            <Block position={'absolute'} bottom={'40px'} right={'40px'} display=\"flex\">\n                                <div className=\"fb-share-button\" data-href=\"https://corona.ethioportal.org\"\n                                     data-layout=\"button\"\n                                     data-size=\"large\"><a target=\"_blank\" rel=\"noopener noreferrer\"\n                                                          href=\"https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fcorona.ethioportal.org%2F&amp;src=sdkpreparse\"\n                                                          className=\"fb-xfbml-parse-ignore\">Share</a></div>\n                                <Button\n                                    size={SIZE.mini}\n                                    onClick={() => setIsOpen(true)}\n                                    overrides={{\n                                        BaseButton: {\n                                            style: ({$theme}) => ({\n                                                borderRadius: $theme.borders.radius200,\n                                                boxShadow: $theme.lighting.shadow500,\n                                                marginLeft: '10px'\n                                            })\n                                        }\n                                    }}\n                                >\n                                    Information\n                                </Button>\n                                {<Button\n                                    size={SIZE.mini}\n                                    onClick={() => setUseDarkTheme(!useDarkTheme)}\n                                    overrides={{\n                                        BaseButton: {\n                                            style: ({$theme}) => ({\n                                                borderRadius: $theme.borders.radius200,\n                                                boxShadow: $theme.lighting.shadow500,\n                                                marginLeft: '10px'\n                                            })\n                                        }\n                                    }}\n                                >\n                                    Turn {useDarkTheme ? ' off ' : ' on '} dark mode\n                                </Button>}\n                                <Modal\n                                    onClose={() => setIsOpen(false)}\n                                    closeable\n                                    isOpen={isOpen}\n                                    animate\n                                    role={ROLE.dialog}\n                                    overrides={{\n                                        Dialog: {\n                                            style: ({$theme}) => ({\n                                                borderRadius: $theme.borders.radius200\n                                            })\n                                        }\n                                    }}\n                                >\n                                    <ModalHeader>Information</ModalHeader>\n                                    <ModalBody>\n                                        <Paragraph3>\n                                            The data provided here is collected from different sources, and mainly from\n                                            official handles. If you want help in providing, updating and verifying the\n                                            data please contact us.\n                                        </Paragraph3>\n                                        <Paragraph3>\n                                            Website: <StyledLink target=\"_blank\" href=\"https://ambapu.org\">\n                                                        https://ambapu.org\n                                                    </StyledLink>\n                                            <br/>\n                                            Email: <StyledLink target=\"_blank\" href=\"mailto:info@ambapu.org\">\n                                                        info@ambapu.org\n                                                    </StyledLink>\n                                            <br/><br/>\n                                            More information on how to contribute financial support is available at&nbsp;\n                                            <StyledLink target=\"_blank\"\n                                                        href=\"https://charity.gofundme.com/o/en/campaign/helping-amhara-region-covid-19-response-effort\">\n                                                Let's unite against COVID19\n                                            </StyledLink>!\n                                        </Paragraph3>\n\n\n                                        <Label2 margin=\"20px 0 10px\">Contributed by</Label2>\n                                        <Contributors/>\n                                    </ModalBody>\n                                </Modal>\n                            </Block>\n                        </Layer>\n                        <Layer>\n                            <Chart/>\n                        </Layer>\n                        <Layer>\n                            <Sections/>\n                        </Layer>\n                        <Layer>\n                            <Footer/>\n                        </Layer>\n                    </Col>\n                </Row>\n            </Container>\n\n        </>\n    );\n}\n","import React from 'react';\n\nimport {useStyletron} from 'baseui';\nimport Mobile from './Mobile';\nimport Desktop from './Desktop';\n\nimport useWindowDimensions from '../../hooks/window-dimensions';\n\nexport default function Layout() {\n    const {width} = useWindowDimensions();\n    const [, theme] = useStyletron();\n\n    return (\n        <>\n            {width < theme.breakpoints.medium\n                ? <Mobile/>\n                : <Desktop />\n            }\n        </>\n    );\n}\n","import React, {useState} from 'react';\nimport {Avatar} from 'baseui/avatar';\nimport {FlexGrid, FlexGridItem} from 'baseui/flex-grid';\n\n\nexport default function Contributors() {\n    return (\n        <FlexGrid\n            flexGridColumnCount={8}\n            flexGridColumnGap=\"scale800\"\n            flexGridRowGap=\"scale800\"\n        >\n            <FlexGridItem>\n                <a\n                    href=\"https://www.ambapu.org\"\n                    title=\"Amhara Professionals Union\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                >\n                    <Avatar\n                        name=\"APU\"\n                        src=\"/images/logo.png\"\n                    />\n                </a>\n            </FlexGridItem>\n            <FlexGridItem>\n                <a\n                    href=\"https://www.wonfel.org\"\n                    title=\"Wonfel\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                >\n                    <Avatar\n                        name=\"APU\"\n                        src=\"/images/wonfel.jpg\"\n                    />\n                </a>\n            </FlexGridItem>\n        </FlexGrid>\n    );\n}\n","import React from 'react';\nimport { Client as Styletron } from 'styletron-engine-atomic';\nimport { Provider as StyletronProvider } from 'styletron-react';\nimport { BaseProvider, darkThemePrimitives, createTheme, DarkTheme, lightThemePrimitives } from 'baseui';\nimport { ThemeContext, ThemeProvider } from './../../contexts/ThemeContext';\nimport { DataProvider } from './../../contexts/DataContext';\n\nimport { Layout } from '../../components';\n\nconst engine = new Styletron();\n\nconst { typography, ...rest } = DarkTheme;\n\nconst lightTheme = createTheme({ ...lightThemePrimitives, primaryFontFamily: 'Rubik' }, {});\nconst darkTheme = createTheme({ ...darkThemePrimitives, primaryFontFamily: 'Rubik' }, { ...rest });\n\nexport default function App() {\n  return (\n    <DataProvider>\n      <StyletronProvider value={engine}>\n        <ThemeProvider>\n          <ThemeContext.Consumer>\n            {({ useDarkTheme }) => (\n              <BaseProvider\n                theme={useDarkTheme ? darkTheme : lightTheme}\n                overrides={{\n                  AppContainer: {\n                    props: {\n                      'data-theme': useDarkTheme ? 'dark' : 'light'\n                    }\n                  },\n                  LayersContainer: {\n                    props: {\n                      'data-theme': useDarkTheme ? 'dark' : 'light'\n                    }\n                  }\n                }}\n              >\n                <Layout />\n              </BaseProvider>\n            )}\n          </ThemeContext.Consumer>\n        </ThemeProvider>\n      </StyletronProvider>\n    </DataProvider>\n  );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport { App } from './containers';\nimport './index.scss';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}